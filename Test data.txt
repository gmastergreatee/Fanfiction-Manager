https://www.fanfiction.net/s/14075187/1/Ashes-of-War

----------------------------------------------------------------------------------------------------------------------------------------------------------------

-3 = unknown page
-2 = manual captcha page
-1 = auto captcha page
0  = TOC page
1  = Chapter page

----------------------------------------------------------------------------------------------------------------------------------------------------------------

if (document.querySelector('#cf-wrapper #cookie-alert'))
    return -2;
if (document.querySelector('.cf-browser-verification.cf-im-under-attack'))
    return -1;
return 0;

----------------------------------------------------------------------------------------------------------------------------------------------------------------

googleads

----------------------------------------------------------------------------------------------------------------------------------------------------------------
let _dat = $('#profile_top>span.xgray.xcontrast_txt').get(0).innerText.split(' - ').filter(i => i.includes(': ')).map((a) => {
    let _r = a.split(': ');
    return { 'Key': _r[0], 'Value': _r[1].replace(',', '') };
});

let retMe = {
    'NovelURL': window.location.href,
    'CoverURL': $('#profile_top img')[0].src,
    'Title': $('#profile_top>b.xcontrast_txt').html(),
    'SubTitle': $('#pre_story_links a').last().text(),
    'Summary': $('#profile_top>div.xcontrast_txt').html(),
    'Author': $('#profile_top>a.xcontrast_txt').html(),
    'PublishedOn': _dat.find(i => i.Key == 'Published').Value,
    'UpdatedOn': '',
    'Words': _dat.find(i => i.Key == 'Words').Value,
    'Chapters': [],
    'ChapterCount': 0,
    'TOC_Extras': [],
};
let up_dat = _dat.find(i => i.Key == 'Updated');
if (up_dat)
    retMe.UpdatedOn = up_dat.Value;
let match = (new RegExp('(?:https://)*(?:www|m)\.fanfiction\.net/([a-z]+)/([0-9]+)/([0-9]+)/([a-zA-Z0-9\-]+)').exec(window.location.href));
if (match) {
    let chaps = Array.from($(document.querySelector('#chap_select')).find('option'));
    chaps.forEach((el, i) => {
        retMe.Chapters.push({
            'Serial': (i + 1),
            'Name': el.innerText,
            'URL': window.location.origin + match[1] + '/' + match[2] + '/' + el.value + '/' + match[4],
        });
    });
    retMe.ChapterCount = chaps.length;
} else {
    return null;
}
return JSON.stringify(retMe);

----------------------------------------------------------------------------------------------------------------------------------------------------------------

return JSON.stringify({
    'Volume': '',
    'Name': $(document.querySelector('#chap_select')).find('option[selected]').get(0).innerText,
    'Content': $('.storytext').html(),
    'NextPageURL': '',
    'Files': [],
});